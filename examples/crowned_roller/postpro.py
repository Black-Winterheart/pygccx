"""
Copyright Matthias Sedlmaier 2022
This file is part of pygccx.

pygccx is free software: you can redistribute it 
and/or modify it under the terms of the GNU General Public License as 
published by the Free Software Foundation, either version 3 of the 
License, or (at your option) any later version.

pygccx is distributed in the hope that it will 
be useful, but WITHOUT ANY WARRANTY; without even the implied warranty 
of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with pygccx.  
If not, see <http://www.gnu.org/licenses/>.

================================================================================

Static contact analysis example of a crowned roller pressed against a flat plate.
The roller has the dimensions D = 20mm, L = 20mm.
The crowning profile has the form:
p(x) = (e**(|x|) - |x| - 1) / (e**(L/2) - L/2 - 1) * p_max
Roller and plate are made out of steel. E = 210000N/mm², mue = 0.3

The roller is modeled as a rigid body, so the Emodule of the plate must be halfed.
See https://elib.dlr.de/12219/1/diss_041005_duplex_rgb.pdf page 45, eq. 3.12

The analysis consists of two load steps.
Step 1: Load of 40_000N is applied at center of roller (no tilting)
        Analytic solution:
        p_h = 271 * sqrt(F / (D * L)) 
            = 271 * sqrt(40_000N / (20mm * 20mm)) 
            = 2_710N/mm²
        Due to the crowning, real pressure must be higher.
Step 2: Load of 40_000N is applied 10% (2mm) out of center. So the pressure on one side 
        of the roller is higher.

All bodies are meshed with linear C3D8I elements.
Symmetry of the model is used. So only one half of the roller and plate is modeled

used model keywords:
Boundary, RigidBody, Material, Elastic, SolidSection
Contact is generated by func make_contact which returns
(SurfaceInteraction, SurfaceBehavior, ContactPair)

used step keywords:
Step, Static, Cload, NodeFile, ElFile, ContactFile

"""

import sys, os

os.chdir(sys.path[0])
sys.path += ['../../', '../../pygccx']

import numpy as np

from pygccx import model as ccx_model
from pygccx import model_keywords as mk
from pygccx import step_keywords as sk
from pygccx import enums

# change this paths to your location of ccx and cgx
CCX_PATH = os.path.join('../../', 'executables', 'calculix_2.19_4win', 'ccx_static.exe')
CGX_PATH = os.path.join('../../', 'executables', 'calculix_2.19_4win', 'cgx_GLUT.exe')


with ccx_model.Model(CCX_PATH, CGX_PATH) as model:
    model.jobname = 'crowned_roller'

    frd_result = model.get_frd_result()
    dat_result = model.get_dat_result()