0.3.0:
    - NEW FEATURES
      - New model keyword *BUCKLE (model_keywords.Buckle)
      - New model keyword *FREQUENCY (model_keywords.Frequency)

    - CHANGES
      - API of result readers.
        In order to support the results from *BUCKLE and *FREQUENCY, both result readers
        (FrdResult and DatResult) had to be rewritten and the API to query result sets changed.
        There is now only one method to query result sets:
        FrdResult.get_result_sets_by()

    - ENHANCEMENTS
      Minor bug fixes and improvements all over the place.

0.2.4:
    - ENHANCEMENTS
      - Pass os.environ to all calls to subprocess.run.
        If CCX and/or CGX is in PATH it is sufficient to set ccx_path='ccx' and/or cgx_path='cgx'

0.2.3:
    - NEW FEATURES
      - New model keyword *HEADING (model_keywords.Heading)
      - New model keyword *CREEP (model_keywords.Creep)
      - New model keyword *CYCLIC SYMMETRY MODEL (model_keywords.CyclicSymmetryModel)
      - New step keyword *NO ANALYSIS (model_keywords.NoAnalysis)
      - New step keyword *VISCO (model_keywords.Visco)
      - New method model.update_mesh_from_frd(filename, type_mapping, ignore_unsup_elems, clear_mesh)
        for reading mesh from result file.

    - ENHANCEMENTS
      - Bugfix in call to subprocess.run under Linux and Mac
      - Bugfix in numpy typing for numpy > 2.0

0.2.2:
    - NEW FEATURES
      - New model keyword *DENSITY (model_keywords.Density)
      - New model keyword *DLOAD (model_keywords.Dload)
      - New model keyword *MPC (model_keywords.Mpc)
      - New model keyword *PRE-TENSION SECTION (model_keywords.PretensionSection)
      - New model keyword *HYPERELASTIC (model_keywords.HyperElastic)
      - New class "Bolt" in module tools
          Class to generate pretensioned bolts for bolted connections made from 
          solid elements. Methods for evaluating section forces are also available.
      - Mew methods "to_pickle" and "from_pickle" in class Model to quickly
        save and load the model from/to a pickle file

    - ENHANCEMENTS
      - Stick slope "lam" is now be use also for TIED surface-to-surface contact in 
        model_keywords.group_funcs.make_contact. If omitted, normal stiffness k is 
        used as before
      - Placement methods (move, rotate_x, ...) in CoordinateSystem now return
        "self" which enables method chaining. 
        E.g. csys.move().rotate_x().rotate(y)

    Minor bug fixes and improvements all over the place.

0.2.1:
    - NEW FEATURES
      - New methods in class CoordinateSystem to transform points, vectors or tensors
        from one coordinate system to another or from / to global.
      - New module "tools" with helper functions
        - tools.stress_tools
          - get_mises_stress. 
            Returns the mises stresses from given stress tensors.
          - get_principal_stresses. 
            Returns eigenvalues and eigenvectors from given stress tensors.
          - get_worst_principal_stress.
            Returns the worst principal stresses from given stress tensors.
          - get_principal_shear_stresses. 
            Returns the principal shear stresses from given stress tensors.
          - get_max_principal_shear_stress. 
            Returns the max principal shear stresses from given stress tensors.

0.2.0:
    - NEW FEATURES
      - New model keyword *TIE (model_keywords.Tie)
      - New model keyword *EQUATION (model_keywords.Equation)
      - New model keyword *INCLUDE (model_keywords.Include)
      - New model keyword *DEFORMATION PLASTICITY (model_keywords.DeformationPlasticity)
      - New step keyword *GREEN (step_keywords.Green) 
        Can also be used as a step keyword
      - New class model_keywords.Universal to write arbitrary strings 
        to input file
      - New method model.update_mesh_from_inp(filename, ignore_unsup_elems, clear_mesh)
        for reading mesh, sets and surfaces from ccx input file.
      - New method mesh.add_sets(*sets) 
        for adding existing ISet instances to mesh.
      - New method mesh.add_node_surface(surf_name, nids) 
        for manual creation of node surfaces .
      - New method mesh.add_el_face_surface(surf_name, faces)
        for manual creation of element face surfaces 
      - New method mesh.add_surfaces(*surfaces)
        for adding existing ISurface instances to mesh.
      - New parameter "no_cpu" in model.solve
        for selecting the number of cpu's used during solve.
      - New parameter "load_inp" in model.show_results_in_cgx.
        Loading of the inp file together with the frd is now optional
      

    - CHANGES:
      - Removed attribute "dim" from ISet.
      - Removed class ElementFace.
        Element faces inside an IElement are now represented by nested tuples
        Each face is a tuple with the node ids forming this face
        (
          (1, 2, 3), # face 1 of element, made up from nodes 1,2,3
          (1, 3, 4), # face 2 of element, made up from nodes 1,2,4
        )
      - Changes in method mesh.add_set(set_name, set_type, ids)
        If a set with given name and set_type already exists, 
        ids are added to the existing set.
  

0.1.0: 
    - NEW FEATURES:
        - Added Keywords *NODE PRINT, *EL PRINT, *CONTACT PRINT
        - Added result reader for frd.<br>
          With model.get_frd_results() a result object is returned for querying results from frd file
        - Added result reader for dat.<br>
          With model.get_dat_results() a result object is returned for querying results from dat file
        - Added example "specimen_weibull" as a Jupyter notebook to show
          the use of model.get_dat_results()

    - CHANGES:
        - Changed name of enum ENodeResults to ENodeFileResults
        - Changed name of enum EElementResult to EElFileResults
        - Changed name of enum EContactResults to EContactFileResults


0.0.1: First publish